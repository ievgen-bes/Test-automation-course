<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="111" started-at="2015-07-15T16:38:36Z" finished-at="2015-07-15T16:38:36Z">
    <groups>
      <group name="ID">
        <method signature="TestNameIDGroup.EmployeeTest_C()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_C" class="myApplicationTest.TestNameIDGroup"/>
        <method signature="TestNameIDGroup.EmployeeTest_D()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_D" class="myApplicationTest.TestNameIDGroup"/>
      </group> <!-- ID -->
      <group name="Name">
        <method signature="TestNameIDGroup.EmployeeTest_A()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_A" class="myApplicationTest.TestNameIDGroup"/>
        <method signature="TestNameIDGroup.EmployeeTest_B()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_B" class="myApplicationTest.TestNameIDGroup"/>
        <method signature="TestNameIDGroup.EmployeeTest_C()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_C" class="myApplicationTest.TestNameIDGroup"/>
        <method signature="TestNameIDGroup.EmployeeTest_D()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_D" class="myApplicationTest.TestNameIDGroup"/>
      </group> <!-- Name -->
    </groups>
    <test name="Name" duration-ms="111" started-at="2015-07-15T16:38:36Z" finished-at="2015-07-15T16:38:36Z">
      <class name="myApplicationTest.TestNameIDGroup">
        <test-method status="PASS" signature="EmployeeTest_A()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_A" duration-ms="61" started-at="2015-07-15T19:38:36Z" finished-at="2015-07-15T19:38:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmployeeTest_A -->
        <test-method status="PASS" signature="EmployeeTest_B()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_B" duration-ms="10" started-at="2015-07-15T19:38:36Z" finished-at="2015-07-15T19:38:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmployeeTest_B -->
        <test-method status="FAIL" signature="EmployeeTest_D()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_D" duration-ms="0" started-at="2015-07-15T19:38:36Z" finished-at="2015-07-15T19:38:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1001] but found [100001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1001] but found [100001]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotSame(Assert.java:492)
	at org.testng.Assert.assertSame(Assert.java:443)
	at org.testng.Assert.assertSame(Assert.java:453)
	at myApplicationTest.TestNameIDGroup.EmployeeTest_D(TestNameIDGroup.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmployeeTest_D -->
        <test-method status="PASS" signature="EmployeeTest_C()[pri:0, instance:myApplicationTest.TestNameIDGroup@16a9952]" name="EmployeeTest_C" duration-ms="0" started-at="2015-07-15T19:38:36Z" finished-at="2015-07-15T19:38:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmployeeTest_C -->
      </class> <!-- myApplicationTest.TestNameIDGroup -->
    </test> <!-- Name -->
  </suite> <!-- Default suite -->
</testng-results>
